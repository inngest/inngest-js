name: PR checks

on:
  pull_request:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_AUTH_TOKEN: nothing

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        nodeVersion: [14, 16, 18, lts]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-and-build
      - run: volta run --node ${{ matrix.nodeVersion }} yarn test

  api_diff:
    name: Local API diff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-and-build
      - run: yarn run api-extractor run

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-and-build
      - run: yarn lint

  examples:
    name: Test examples
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo:
          - inngest/sdk-example-cloudflare-workers
          - inngest/sdk-example-nextjs-vercel
          - inngest/sdk-example-redwoodjs-vercel
          - inngest/sdk-example-nextjs-cloudflare
          - inngest/sdk-example-nextjs-netlify
          - inngest/sdk-example-remix-vercel
    steps:
      # Checkout the repo
      - uses: actions/checkout@v3
        with:
          path: sdk
      - uses: ./sdk/.github/actions/setup-and-build
        with:
          working-directory: sdk

      # Checkout the example repo
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.EXAMPLES_GITHUB_TOKEN }}
          repository: ${{ matrix.repo }}
          path: examples/${{ matrix.repo }}
          ref: main

      # Get the SDK ready and link it locally
      - run: yarn prelink
        working-directory: sdk
      - run: yarn link
        working-directory: sdk/dist

      # Install dependencies in the example repo
      - run: test -f yarn.lock && yarn install --frozen-lockfile || npm ci
        working-directory: examples/${{ matrix.repo }}

      # Link the SDK, making sure to use the same Yarn version that we used to
      # create the link.
      #
      # Because repos are always owner/repo with a slash, the directory will be
      # the same, therefore we must venture an extra level deep when searching
      # for package.json.
      #
      # Yarn v3 (berry) will override Volta's version control and always use
      # whatever version is specified and cached in the repo's `.yarnrc.yml`
      # file.
      # Because of this, we must instead link the SDK using a relative path, and
      # have the library's `dist/` directory appear as a separate package by
      # specifying an empty `yarn.lock` file within.
      - run: |
          yarnv=$(volta run --yarn $(cat ../../../sdk/package.json | jq -r .volta.yarn) yarn -v)

          if [[ $yarnv == 3* ]]; then
            touch ../../../sdk/dist/yarn.lock
            yarn link ../../../sdk/dist
          else
            volta run --yarn $(cat ../../../sdk/package.json | jq -r .volta.yarn) yarn link inngest
          fi
        working-directory: examples/${{ matrix.repo }}

      # Copy any SDK function examples to the example repo so that we're always
      # testing many functions against many handlers.
      - id: inngest-functions-path
        run: echo "dir=$(dirname $(echo \"$(git ls-files | grep inngest/index.ts)))\"" >> $GITHUB_OUTPUT
        working-directory: examples/${{ matrix.repo }}
      - run: rm -rf ${{ steps.inngest-functions-path.outputs.dir }}
        working-directory: examples/${{ matrix.repo }}
      - run: cp -Tr ../../../sdk/src/examples/ ${{ steps.inngest-functions-path.outputs.dir }}
        working-directory: examples/${{ matrix.repo }}

      # Try to build the example
      - run: test -f yarn.lock && yarn build || npm run build
        working-directory: examples/${{ matrix.repo }}

      # Run the example
      - run: test -f yarn.lock && (yarn dev > dev.log 2>&1 &) || (npm run dev > dev.log 2>&1 &)
        working-directory: examples/${{ matrix.repo }}
        # Provide the example any env vars it might need
        env:
          PORT: 3000
      - uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:3000/api/inngest"
          timeout: "60"
      - if: ${{ always() }}
        run: cat dev.log
        working-directory: examples/${{ matrix.repo }}

      # Give the dev server 5 seconds to register with the example
      - run: sleep 5

      # Run the dev server
      - run: npx inngest-cli@latest dev &
        working-directory: examples/${{ matrix.repo }}
        env:
          DO_NOT_TRACK: 1
      - uses: mydea/action-wait-for-api@v1
        with:
          url: "http://localhost:8288"
          timeout: "60"

      # Run the examples test suite against the dev server
      - run: yarn test:examples
        working-directory: sdk
