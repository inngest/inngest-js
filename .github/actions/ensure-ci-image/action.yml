name: "Ensure CI image"
description: "Ensure the CI Docker image exists for this deps hash"
inputs:
  github-token:
    description: "Token for pushing to GHCR"
    required: true
outputs:
  image:
    description: "The container image URL"
    value: ${{ steps.meta.outputs.image }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - id: hash
      shell: bash
      run: |
        HASH=$(sha256sum flake.nix flake.lock pnpm-lock.yaml | sha256sum | cut -d' ' -f1)
        echo "hash=$HASH" >> "$GITHUB_OUTPUT"

    - id: meta
      shell: bash
      run: |
        IMAGE="ghcr.io/${{ github.repository }}/ci:${{ steps.hash.outputs.hash }}"
        echo "image=$IMAGE" >> "$GITHUB_OUTPUT"

    - name: Log in to GHCR
      shell: bash
      run: echo "${{ inputs.github-token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Try pull existing image
      id: pull
      shell: bash
      continue-on-error: true
      run: docker pull ${{ steps.meta.outputs.image }}

    - name: Prepare for build (Nix)
      if: steps.pull.outcome == 'failure'
      uses: DeterminateSystems/nix-installer-action@main

    - name: Prepare for build (Nix cache)
      if: steps.pull.outcome == 'failure'
    - uses: DeterminateSystems/magic-nix-cache-action@main

    - name: Build + push image if missing
      if: steps.pull.outcome == 'failure'
      shell: bash
      run: |
        nix build .#ciImage
        docker load < result
        docker tag inngest-ci:latest ${{ steps.meta.outputs.image }}
        docker push ${{ steps.meta.outputs.image }}
